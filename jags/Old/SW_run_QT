
# Read in raw data
adult_female_survival <- read.csv("C:/Users/saraw/OneDrive/Documents/GitHub/KZ-and-QT-IPMs/data/QT/adult_female_survival_QT.csv")
adult_female_recruit <- read.csv("C:/Users/saraw/OneDrive/Documents/GitHub/KZ-and-QT-IPMs/data/QT/adult_female_recruit_QT.csv")
adult_sex_ratio <- read.csv("C:/Users/saraw/OneDrive/Documents/GitHub/KZ-and-QT-IPMs/data/QT/adult_sexratio_QT.csv")

# both adult and calf counts and estimatwa
count_dat <- read.csv("C:/Users/saraw/OneDrive/Documents/GitHub/KZ-and-QT-IPMs/data/QT/count_QT.csv")


#  Years of study
yrs <-  seq(from = 2001, to = 2020, by = 1)
nyr <- length(yrs)
yr_idx <- seq(from = 1, to = nyr, by = 1)
yr_df <- as.data.frame(cbind(yrs, yr_idx))


#  Create vectors of sex ratio
adult_sex_ratio <- adult_sex_ratio$Mean


#  Recruitment 
adult_female_recruit <- adult_female_recruit %>%	
	mutate(Mean=Mean/2,  SD=SD/2)

meanr <- array(NA, c(1,1,2)) 
meanr[1,1,1] <- mean(adult_female_recruit$Mean, na.rm = TRUE)
meanr[1,1,2] <- 100


# Survival - need estimates for both penned and control (not penned) population units
#  Survival rate is assumed the same across subadult 1, subadult 2 and adult
means <- array(NA, c(3,1,2))

adult_female_survival_control <- adult_female_survival %>%
	dplyr::filter(Pop == 1) 

means[2:3,1,1] <- mean(adult_female_survival_control$Mean, na.rm = TRUE)
means[2:3,1,2] <- 100


# Starting population size of population unit (vector of values for each age class)
n1 <- numeric()
n1[1] <- count_dat$SurveryCount_CALFMF[2]*.5
n1[2] <- (count_dat$SurveryCount_ADULTMF[2]*0.64)*.15  
n1[3] <- (count_dat$SurveryCount_ADULTMF[2]*0.64)*.85  


#  Survival estimates by year of penned and control (not penned) population units separately
sdat <- adult_female_survival %>%
	mutate(dau = 1, 
		age = 3,
		pop = Pop,
		mu = ifelse(Mean!= 1, Mean, 0.99),
		tau = 1/ (SD * SD)) %>%
		#tau = 500) %>%
	dplyr::filter(!is.na(mu)) %>%
	left_join(yr_df, by = c("Year" = "yrs")) %>%
	dplyr::select(dau, yr = yr_idx, age, pop, mu, tau)
sdat$tau[sdat$tau == "Inf"] <- mean(sdat$tau[!is.infinite(sdat$tau)])
ns <- nrow(sdat)	


#  Recruitment estimates by year of control (not penned) population unit
rdat <- adult_female_recruit  %>%
	mutate(dau = 1, 
		age = NA,
		pop = Pop,
		mu = Mean,
		tau = 1/ (SD * SD)) %>%
		#tau = 0.1) %>%
	dplyr::filter(!is.na(mu)) %>%
	left_join(yr_df, by = c("Year" = "yrs")) %>%
	dplyr::select(dau, yr = yr_idx, age, pop, mu, tau) 
nr <- nrow(rdat)	


#  Minium counts of all individuals (only females in this set up) combined over penned and control (not penned) 
#   population units 
mindat <- count_dat %>%
	mutate(dau = 1, 
		age = NA,
		pop = NA,
		mu = SurveryCount_ADULTMF,
		tau = NA) %>%
	dplyr::filter(mu > 4) %>%
	left_join(yr_df, by = c("Year" = "yrs")) %>%
	dplyr::select(dau, yr = yr_idx, age, pop, mu, tau)
nmin <- nrow(mindat)

calf_mindat <- count_dat %>%
	mutate(dau = 1, 
		age = NA,
		pop = NA,
		mu = SurveryCount_CALFMF,
		tau = NA) %>%
	dplyr::filter(mu > 4) %>%
	left_join(yr_df, by = c("Year" = "yrs")) %>%
	dplyr::select(dau, yr = yr_idx, age, pop, mu, tau) 

abundat <- count_dat %>%
	mutate(dau = 1, 
		age = NA,
		pop = NA,
		mu = Estimate_ADULTMF,
		tau = 1/(SD_Estimate_ADULTMF * SD_Estimate_ADULTMF)) %>%
	dplyr::filter(mu > 4) %>%
	left_join(yr_df, by = c("Year" = "yrs")) %>%
	dplyr::select(dau, yr = yr_idx, age, pop, mu, tau) 
na <- nrow(abundat)

calf_abundat <- count_dat %>%
	mutate(dau = 1, 
		age = NA,
		pop = NA,
		mu = Estimate_CALFMF,
		tau = 1/(SD_Estimate_CALFMF * SD_Estimate_CALFMF)) %>%
	dplyr::filter(mu > 4) %>%
	left_join(yr_df, by = c("Year" = "yrs")) %>%
	dplyr::select(dau, yr = yr_idx, age, pop, mu, tau) 




#  Gather data inputs in a list
ipm_dat <- list(nyr = nyr,
	nmin = nmin,
	ns = ns,
	nr = nr,
	na = na,
	#wolfpen_ind = wolfpen_ind,
	means = means,
	meanr = meanr,
	n1 = n1, 
	adult_sex_ratio = adult_sex_ratio,
	mindat = mindat, 
	calf_mindat = calf_mindat, 
	abundat = abundat,
	calf_abundat = calf_abundat,
	sdat = sdat, 
	rdat = rdat)


#  Initial values for N to avoid parent node erros
Nst <- array(10, c(nyr,3,1))
ipm_inits <- function(){ 
		list(N = Nst)}
	
	
#  Model parameters to monitor
model_parms <- c("lambda","logla",
	"totN", "N", "S", "R", "r1", "r2", 
	#"wolfpen_eff_r", "wolfpen_eff_s",
	"sa_yr", "r_yr", 
	"totCalves", "totAdults",	
	"totAdultsMF", "totCalvesMF", "totNMF") #,
	#"geom_mean_lambda",
	#"geom_mean_lambda_pre", "geom_mean_lambda_post",
	#"diff_geom_mean_lambda_post_to_pre","diff_geom_mean_lambda_post_to_pre_iwolf",
	#"geom_mean_lambda_post_iwolf",
	#"mean_surv_pre", "mean_surv_post",
	#"mean_r_pre", "mean_r_post")


nt <- 3
nb <- 8000
nc <- 3
nad <- 5000
ni <- 50000

out_rnd_eff <- jagsUI::jags(ipm_dat, 
	inits = ipm_inits,
	model_parms,
	model.file = "C:/Users/saraw/OneDrive/Documents/GitHub/KZ-and-QT-IPMs/jags/QT_IPM_rnd_eff_ABUND.txt",
	n.chains = nc, 
	n.iter = ni,
	n.burnin = nb,
	n.thin = nt,
	n.adapt = nad)


kp1 <- c(2, 8, 13, 16, 18, 19)
chk1 <- abundat %>%
	dplyr::select(yr, data_EstimateADULTMF = mu) %>%
	cbind(data_SurveyCountADULTMF = mindat$mu) %>%
	cbind(model_EstimateADULTMF = out_rnd_eff$mean$totAdultsMF[kp1]) 
chk1

chk2 <- calf_abundat %>%
	dplyr::select(yr, data_EstimateCALFMF = mu) %>%
	cbind(data_SurveyCountCALFMF = calf_mindat$mu) %>%
	cbind(model_EstimateCALFMF = out_rnd_eff$mean$totCalvesMF[kp1]) 
chk2

kp3<- sdat$yr
chk3 <- sdat %>%
	dplyr::select(yr, data_SurvialAdult = mu) %>%
	cbind(model_SurvivalAdult = out_rnd_eff$mean$S[kp3]) 
chk3



mcmcplots::mcmcplot(out_rnd_eff$samples, parms = c("r1"))


